@page
@model StudentsModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Students";
}

<div class="top-bar">
    <h1>Student List</h1>
    <div>
        <input type="text" id="searchStudentId" placeholder="Enter Student ID" />
        <button class="btn btn-primary" onclick="searchStudent()">Search</button>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createStudentModal">
            <i class="fas fa-plus"></i> Create Student
        </button>
        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteStudentModal">
            <i class="fas fa-trash-alt"></i> Delete Student
        </button>
    </div>
</div>

@if (Model.Students == null || !Model.Students.Any())
{
    <p><em>No students found.</em></p>
}
else
{
    <div class="table-container">
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Professor</th>
                    <th>Major</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in Model.Students)
                {
                    <tr>
                        <td>@student.StudentID</td>
                        <td>@student.StudentName</td>
                        <td>@student.StudentSurname</td>
                        <td>@student.ProfessorID</td>
                        <td>@student.MajorID</td>
                        <td>
                            <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editStudentModal" onclick="setEditStudent(@student.StudentID)">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#deleteStudentModal" onclick="setDeleteStudent(@student.StudentID)">
                                <i class="fas fa-trash-alt"></i> Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- Create Student Modal -->
@await Html.PartialAsync("_CreateStudentModal")

<!-- Edit Student Modal -->
<div class="modal fade" id="editStudentModal" tabindex="-1" aria-labelledby="editStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStudentModalLabel">Edit Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editStudentForm">
                    <input type="hidden" id="editStudentId">
                    <div class="mb-3">
                        <label for="editStudentName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="editStudentName" required>
                    </div>
                    <div class="mb-3">
                        <label for="editStudentSurname" class="form-label">Surname</label>
                        <input type="text" class="form-control" id="editStudentSurname" required>
                    </div>
                    <!-- Add other fields as needed -->
                    <button type="submit" class="btn btn-primary">Save changes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Student Modal -->
<div class="modal fade" id="deleteStudentModal" tabindex="-1" aria-labelledby="deleteStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteStudentModalLabel">Delete Student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this student?</p>
                <input type="hidden" id="deleteStudentId">
                <button type="button" class="btn btn-danger" onclick="confirmDeleteStudent()">Delete</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function searchStudent() {
            var studentId = document.getElementById('searchStudentId').value;
            if (studentId) {
                window.location.href = `/Students?handler=StudentById&id=${studentId}`;
            } else {
                alert('Please enter a student ID.');
            }
        }

        function setEditStudent(studentId) {
            document.getElementById('editStudentId').value = studentId;
            // Fetch student details and set them in the form
        }

        function setDeleteStudent(studentId) {
            document.getElementById('deleteStudentId').value = studentId;
        }

        function confirmDeleteStudent() {
            var studentId = document.getElementById('deleteStudentId').value;
            fetch(`/api/Student/${studentId}`, {
                method: 'DELETE'
            }).then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Failed to delete student.');
                }
            });
        }

        document.getElementById('createStudentForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var name = document.getElementById('createStudentName').value;
            var surname = document.getElementById('createStudentSurname').value;
            var professorId = document.getElementById('createProfessorId').value;
            var majorId = document.getElementById('createMajorId').value;

            var data = {
                studentName: name,
                studentSurname: surname,
                professorID: professorId,
                majorID: majorId
            };

            fetch('/api/Student', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }).then(response => response.json())
            .then(result => {
                if (result.success) {
                    alert('Student created successfully.');
                    location.reload();
                } else {
                    alert('Failed to create student.');
                }
            }).catch(error => console.error('Error:', error));
        });

        document.getElementById('editStudentForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var studentId = document.getElementById('editStudentId').value;
            var name = document.getElementById('editStudentName').value;
            var surname = document.getElementById('editStudentSurname').value;
            // Add other fields as needed

            var data = {
                studentName: name,
                studentSurname: surname
                // Add other fields as needed
            };

            fetch(`/api/Student/${studentId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            }).then(response => response.json())
            .then(result => {
                if (result.success) {
                    alert('Student updated successfully.');
                    location.reload();
                } else {
                    alert('Failed to update student.');
                }
            }).catch(error => console.error('Error:', error));
        });
    </script>
}
