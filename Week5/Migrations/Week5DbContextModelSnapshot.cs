// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Week5.Infrastructure_Layer.Persistence;

#nullable disable

namespace Week5.Migrations
{
    [DbContext(typeof(Week5DbContext))]
    partial class Week5DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Week5.Domain_Layer.Entity.BehaviorScore", b =>
                {
                    b.Property<int>("ScoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScoreID"));

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("ScoreID");

                    b.HasIndex("StudentID");

                    b.ToTable("BehaviorScore");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Class", b =>
                {
                    b.Property<int>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassID"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassID");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Major", b =>
                {
                    b.Property<int>("MajorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MajorID"));

                    b.Property<string>("MajorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorID");

                    b.ToTable("Major");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Professor", b =>
                {
                    b.Property<int>("ProfessorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessorID"));

                    b.Property<string>("ProfessorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessorSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessorID");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentID"));

                    b.Property<int>("MajorID")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorID")
                        .HasColumnType("int");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentID");

                    b.HasIndex("MajorID");

                    b.HasIndex("ProfessorID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.StudentClass", b =>
                {
                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.HasKey("StudentID", "ClassID");

                    b.HasIndex("ClassID");

                    b.ToTable("StudentClass");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.BehaviorScore", b =>
                {
                    b.HasOne("Week5.Domain_Layer.Entity.Student", "Student")
                        .WithMany("BehaviorScore")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Student", b =>
                {
                    b.HasOne("Week5.Domain_Layer.Entity.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Week5.Domain_Layer.Entity.Professor", "Professor")
                        .WithMany("Student")
                        .HasForeignKey("ProfessorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.StudentClass", b =>
                {
                    b.HasOne("Week5.Domain_Layer.Entity.Class", "Class")
                        .WithMany("StudentClass")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Week5.Domain_Layer.Entity.Student", "Student")
                        .WithMany("StudentClass")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Class", b =>
                {
                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Major", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Professor", b =>
                {
                    b.Navigation("Student");
                });

            modelBuilder.Entity("Week5.Domain_Layer.Entity.Student", b =>
                {
                    b.Navigation("BehaviorScore");

                    b.Navigation("StudentClass");
                });
#pragma warning restore 612, 618
        }
    }
}
